name: CI

on:
  push:
    branches:
      - main   # push commit to the main branch
    tags:
      - '*'  # push tag to the main branch
  pull_request:
    branches:
      - main   # pull request to the main branch
  workflow_dispatch:   # allow manual triggering

defaults:
  run:
    shell: bash -l {0}

jobs:
  build-linux:
    name: CI py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        # python-version: ['3.8', '3.9', '3.10', '3.11']  # 2022-Q4
      max-parallel: 5
    env:
      python_version: ${{ matrix.python-version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create Python ${{ matrix.python-version }} environment
        uses: mamba-org/provision-with-micromamba@v12
        with:
          cache-downloads: true
          cache-env: true
          channel-priority: flexible
          channels: defaults, conda-forge
          environment-file: false
          environment-name: anaconda-test-env-py-${{ matrix.python-version }}
          extra-specs: |
            python=${{ matrix.python-version }}
            black
            coverage
            coveralls
            flake8
            pip
            pygithub
            pytest
            setuptools
            typed-ast>=1.5.0 

      # - name: Install Requirements
      #   run: |
      #     python3 -m pip install --upgrade pip setuptools
      #     python3 -m pip install -r requirements.txt
      #     python3 -m pip install pytest coverage coveralls
      #     python3 -m pip install black flake8
      #     python3 -m pip list

      - name: Check Code Style
        run: |
          flake8
          black boiga/boiga_tool.py
          black boiga/create_release_notes.py
          black setup.py

      - name: Python Tests
        run: |
          coverage run --concurrency=thread --parallel-mode -m pytest -vvv .

      - name: Command Tests
        run: |
          python3 ./setup.py build sdist
          python3 -m pip install .
          # check that these commands work
          boiga_tool --help
          boiga_tool name boiga/env_example1.yml
          boiga_tool conda boiga/env_example1.yml
          boiga_tool pip boiga/env_example1.yml
          boiga_create.sh help
