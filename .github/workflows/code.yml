name: CI

on:
  push:
    branches:
      - main   # push commit to the main branch
    tags:
      - '*'  # push tag to the main branch
  pull_request:
    branches:
      - main   # pull request to the main branch
  workflow_dispatch:   # allow manual triggering

defaults:
  run:
    shell: bash -l {0}

jobs:
  test-matrix:
    name: CI py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"  # not 3.10 which truncates to 3.1
          - "3.11"  # 2022-Q4
          # TODO: - "3.12"  # 2023-Q4
      max-parallel: 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Python ${{ matrix.python-version }} environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-downloads: true
          environment-file: .github/env-ci.yml
          environment-name: anaconda-test-env-py-${{ matrix.python-version }}
          condarc: |
            channel-priority: flexible
          init-shell: bash
          create-args: >-
            python=${{ matrix.python-version }}
            pytest
            pytest-cov
            python=${{ matrix.python-version }}
            pyyaml
            setuptools-scm
          cache-environment: true
          cache-environment-key: env-key-${{ matrix.python-version }}

      - name: Check Code Style
        run: |
          flake8
          black murky/murky_tool.py
          black murky/create_release_notes.py
          black setup.py

      - name: Diagnostics
        shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          conda env list
          printenv | sort

      - name: Python Tests
        run: |
          coverage run --concurrency=thread --parallel-mode -m pytest -vvv .

      - name: Install for functional testing
        run: |
          python3 ./setup.py build sdist
          python3 -m pip install .

      - name: Command Tests
        run: |
          murky_tool --help
          murky_tool name murky/env_example1.yml
          murky_tool conda murky/env_example1.yml
          murky_tool pip murky/env_example1.yml
          murky_create.sh help

      # - name: Micromamba Diagnostics
      #   shell: bash -l {0}
      #   run: |
      #     echo "coveralls: '$(which coveralls)'"
      #     micromamba list coveralls

      - name: Run tests with pytest & coverage
        shell: bash -l {0}
        run: |
          set -vxeuo pipefail
          coverage run --concurrency=thread --parallel-mode -m pytest -vvv # --exitfirst .
          coverage combine

      - name: Coverage Report
        shell: bash -l {0}
        run: |
          coverage report --precision 3

      # - name: Upload coverage data to coveralls.io
      #   shell: bash -l {0}
      #   run: |
      #     coveralls debug
      #     coveralls --service=github
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
      #     COVERALLS_PARALLEL: true

  # # https://coveralls-python.readthedocs.io/en/latest/usage/configuration.html#github-actions-support
  # coveralls:
  #   name: Report unit test coverage to coveralls
  #   needs: test-matrix
  #   runs-on: ubuntu-latest
  #   container: python:3-slim

  #   steps:
  #     - name: Gather coverage and report to Coveralls
  #       run: |
  #         echo "Finally!"
  #         pip3 install --upgrade coveralls
  #         # debug mode: output prepared json and reported files list to stdout
  #         # https://coveralls-python.readthedocs.io/en/latest/troubleshooting.html
  #         coveralls debug
  #         # coveralls --service=github --finish
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
